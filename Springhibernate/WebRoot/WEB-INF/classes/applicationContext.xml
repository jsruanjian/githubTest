<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        ">
        <!-- 只解析controller之外的注解(即解析Service,dao),避免重复加载导致事物失效  -->
       <context:component-scan base-package="com.rj">
        <!-- annotation为spting-mvc中解析的内容 -->
         <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
       </context:component-scan>
       
        <!-- 与下面的配置等价，下面的更容易理解 -->
	 <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	 	<property name="locations">
	 		<array>
	 		    <value>classpath:conn.properties</value>
	 			
	 		</array>
	 	</property>
	 </bean>
	 
       <!-- 配置数据源 -->
       <!-- com.mchange.v2.c3p0.ComboPooledDataSource类在c3p0-0.9.5.1.jar包的com.mchange.v2.c3p0包中 -->
	 <bean id="dataSource" class="${dataSource}">  
	    <property name="driverClass" value="${driverClass}" />  
	    <property name="jdbcUrl" value="${jdbcUrl}" />  
	    <property name="user" value="${user}" />  
	    <property name="password" value="${password}" />
	 </bean>  
       
       <!-- 配置SeesionFactory -->
       <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	        <property name="dataSource" ref="dataSource"></property>
	        <!-- packagesToScan 扫描包所在路径（name中的内容其实是个关键字，可以扫描一整个包） -->
	        <property name="packagesToScan">
	         <list>
	           <value>com.rj.entity</value>
	         </list>        
	        </property>
	        <!-- 定义Hibernate的SessionFactory的属性 -->
	        <property name="hibernateProperties">
		          <props> 
		            <!-- 指定数据库方言 -->
			          <prop key="hibernate.dialect">
						org.hibernate.dialect.MySQLDialect
					  </prop>
			           <!-- 是否根据需要每次自动创建数据库   第一次生成数据库的时候用create，之后换成update，否则内容会清空  -->
			          <prop key="hibernate.hbm2ddl.auto">update</prop>
			            <!-- 显示Hibernate持久化操作所生成的SQL -->
			          <prop key="hibernate.show_sql">true</prop>
			           <!-- 将SQL脚本进行格式化后再输出 -->
			          <prop key="hibernate.format_sql">true</prop>
			          <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
	              </props>
	        </property>
	        <property name="annotatedClasses">
	        	<list>
	        		<value>com.rj.entity.User</value>
	        	</list>
	        </property>
        </bean>
        <!-- 配置一个事务管理器 -->
        <!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
        <!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现-->
       <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
         <!-- 配置HibernateTransactionManager时需要依注入SessionFactory的引用 -->
         <property name="sessionFactory" ref="sessionFactory"></property>
       </bean>
       
       <!-- 配置事务切面Bean,指定事务管理器 -->
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
         <!-- 用于配置详细的事务语义 -->
         <tx:attributes>
          <!-- 拦截的是下段配置aop里设置的路径,既txPointcut中配置的路径  -->
          <!-- propagation="REQUIRED"事物传播行为 -->
          <tx:method name="save*" propagation="REQUIRED"/>
          <tx:method name="add*" propagation="REQUIRED"/>
          <tx:method name="create*" propagation="REQUIRED"/>
          <tx:method name="insert*" propagation="REQUIRED"/>
          <tx:method name="update*" propagation="REQUIRED"/>
          <tx:method name="merge*" propagation="REQUIRED"/>
          <tx:method name="del*" propagation="REQUIRED"/>
          <tx:method name="remove*" propagation="REQUIRED"/>
          <tx:method name="put*" propagation="REQUIRED"/>
          <tx:method name="use*" propagation="REQUIRED"/>
          <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
          <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
          <tx:method name="count*" propagation="REQUIRED" read-only="true"/>
          <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
          <tx:method name="list*" propagation="REQUIRED" read-only="true"/>
          <tx:method name="*" propagation="REQUIRED" read-only="true"/>
         </tx:attributes>
       </tx:advice>
       
       <aop:config expose-proxy="true">
         <!-- 只对业务逻辑层（service层）实施事务 -->
	         <!-- <aop:pointcut id="txPointcut" expression="execution(* com.lq.service.*.*)" /> -->
	        <aop:pointcut id="txPointcut" expression="execution(* com.rj.service..*.*(..))" />
	        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
       </aop:config>

       
       </beans>
