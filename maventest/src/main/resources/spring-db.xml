<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd" >
     
     <!-- 与下面的配置等价，下面的更容易理解 -->
	 <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	 	<property name="locations">
	 		<array>
	 		    <value>classpath:jdbc.properties</value>
	        </array>
	 	</property>
	 </bean>
	 
       <!-- 配置数据源 -->
       <!-- com.mchange.v2.c3p0.ComboPooledDataSource类在c3p0-0.9.5.1.jar包的com.mchange.v2.c3p0包中 -->
	 <bean id="dataSource" class="${dataSource}">  
	    <property name="driverClass" value="${driverClass}" />  
	    <property name="jdbcUrl" value="${jdbcUrl}" />  
	    <property name="user" value="${user}" />  
	    <property name="password" value="${password}" />
	 </bean>  
	 
	    <!-- 配置SeesionFactory -->
     <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	        <property name="dataSource" ref="dataSource"></property>
	        <!-- packagesToScan 扫描包所在路径（name中的内容其实是个关键字，可以扫描一整个包） -->
	        <property name="packagesToScan">
	          <list>
	             <value>com.entity</value>
	          </list>        
	        </property>
	        <!-- 定义Hibernate的SessionFactory的属性 -->
	        <property name="hibernateProperties">
		          <props> 
		              <!-- 指定数据库方言 -->
			          <prop key="hibernate.dialect">
						org.hibernate.dialect.MySQLDialect
					  </prop>
			           <!-- 是否根据需要每次自动创建数据库   第一次生成数据库的时候用create，之后换成update，否则内容会清空  -->
			          <prop key="hibernate.hbm2ddl.auto">update</prop>
			            <!-- 显示Hibernate持久化操作所生成的SQL -->
			          <prop key="hibernate.show_sql">true</prop>
			           <!-- 将SQL脚本进行格式化后再输出 -->
			          <prop key="hibernate.format_sql">true</prop>
			          <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
	              </props>
	        </property>
	        <property name="annotatedClasses">
	        	<list>
	        		<value>com.entity.User</value>
	        	</list>
	        </property>
        </bean>
       

                        
</beans>                       