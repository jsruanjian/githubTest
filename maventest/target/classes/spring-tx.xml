<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
                        http://www.springframework.org/schema/cache
                        http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-4.2.xsd" >
                        
      <!-- 配置一个事务管理器 -->
      <!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
      <!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现-->
       <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
         <!-- 配置HibernateTransactionManager时需要依注入SessionFactory的引用 -->
         <property name="sessionFactory" ref="sessionFactory"></property>
       </bean>
       
       <!-- 配置事务切面Bean,指定事务管理器 -->
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
         <!-- 用于配置详细的事务语义 -->
         <tx:attributes>
          <!-- 拦截的是下段配置aop里设置的路径,既txPointcut中配置的路径  -->
          <!-- propagation="REQUIRED"事物传播行为 -->
          <tx:method name="save*" propagation="REQUIRED"/>
          <tx:method name="add*" propagation="REQUIRED"/>
          <tx:method name="create*" propagation="REQUIRED"/>
          <tx:method name="insert*" propagation="REQUIRED"/>
          <tx:method name="update*" propagation="REQUIRED"/>
          <tx:method name="merge*" propagation="REQUIRED"/>
          <tx:method name="del*" propagation="REQUIRED"/>
          <tx:method name="remove*" propagation="REQUIRED"/>
          <tx:method name="put*" propagation="REQUIRED"/>
          <tx:method name="use*" propagation="REQUIRED"/>
          <!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
          <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
          <tx:method name="count*" propagation="REQUIRED" read-only="true"/>
          <tx:method name="find*" propagation="REQUIRED" read-only="true"/>
          <tx:method name="list*" propagation="REQUIRED" read-only="true"/>
          <tx:method name="*" propagation="REQUIRED" read-only="true"/>
         </tx:attributes>
       </tx:advice>
       
       <aop:config expose-proxy="true">
         <!-- 只对业务逻辑层（service层）实施事务 -->
	         <!-- <aop:pointcut id="txPointcut" expression="execution(* com.lq.service.*.*)" /> -->
	        <aop:pointcut id="txPointcut" expression="execution(* com.service..*.*(..))" />
	        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
       </aop:config>                   
                        

</beans>                        